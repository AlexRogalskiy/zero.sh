#!/bin/sh
set -o errexit -o nounset

ARCHIVE_DIR="./archive"

build_release_target() {
    echo "Building target for release..."

    set -x
    swift build -c release -Xswiftc -Osize
    mkdir -p "$ARCHIVE_DIR"
    cp .build/release/zero "$ARCHIVE_DIR"
    strip "$ARCHIVE_DIR/zero"
    set +x

    echo "Successfully built target."
}

package() {
    (
        echo "Preparing new package..."

        completion_out_dir="$(mktemp -d -t zero-sh-completions)"
        OUT_DIR="$completion_out_dir" swift run generate-completions

        version="$("$ARCHIVE_DIR"/zero --version | sed 's/^Version: //')"
        package_name="zero-$version"
        package_dir="$ARCHIVE_DIR/$package_name"

        mkdir -p "$package_dir"
        mkdir -p "$package_dir/complete"
        cp "archive/zero" "$package_dir/"
        cp CHANGELOG.md README.md LICENSE "$package_dir/"

        cp "$completion_out_dir/_zero" "$package_dir/complete/"

        tar czvf "$ARCHIVE_DIR/$package_name.tar.gz" --options compression-level=9 "$package_dir"

        sha="$(shasum -a 256 "$ARCHIVE_DIR/$package_name.tar.gz" | sed 's/ .*//')"
        echo "Package SHA: $sha"
    )
}

main() {
    build_release_target

    if [ "${1:-}" = "--package" ]; then
        package
    fi
}

main "$@"
